{
  "openapi":"3.0.0",
  "info":{
      "title": "Quik User API",
      "description": "Documentation to Quik User API",
      "contact": {
          "email": "luiz.mendes@outlook.com"
      },
      "version": "1.0.0"
  },
  "servers":[
    {
      "url":"http://localhost:3000/v1",
      "description": "Dev API"
    }
  ],
  "paths":{
    "/register":{
      "post": {
        "summary":"Register a user.",
        "description": "Responsible for adding the user.",
        "tags":["User"],
        "requestBody": {
          "content":{
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              },
              "examples": {
                "user":{
                  "value": {
                    "username": "luizmendes90",
                    "password": "minhasenha"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/message"
                },
                "examples": {
                  "responseMessage": {
                    "value": {
                      "msg": "User name is required!."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/message"
                },
                "examples": {
                  "message": {
                    "value": {
                      "msg": "User already exists, try another username."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login":{
      "post": {
        "summary":"Authenticate a user.",
        "description": "Responsible to register a user.",
        "tags":["User"],
        "requestBody": {
          "content":{
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              },
              "examples": {
                "user":{
                  "value": {
                    "username": "luizmendes90",
                    "password": "minhasenha"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/message"
                },
                "examples": {
                  "responseMessage": {
                    "value": {
                      "msg": "User name is required!."
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/message"
                },
                "examples": {
                  "message": {
                    "value": {
                      "msg": "Login not found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user":{
      "post": {
        "summary":"Add one user.",
        "description": "Responsible for adding the user.",
        "tags":["User"],
        "security":[{"bearerAuth":[]}],
        "requestBody": {
          "content":{
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user":{
                  "value": {
                    "name": "Luiz Mendes",
                    "username": "luizmendes90",
                    "birthdate": "1990-12-08",
                    "address": "Avenida Tropical",
                    "addressNumber": "1234",
                    "primaryPhone": "(99) 9999-9999",
                    "description": "Hello"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/message"
                },
                "examples": {
                  "responseMessage": {
                    "value": {
                      "msg": "User name is required!."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/message"
                },
                "examples": {
                  "message": {
                    "value": {
                      "msg": "User already exists, try another username."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}":{
      "get":{
        "summary": "Get one user by id.",
        "description": "Responsible for fetching a user based on the entered id.",
        "tags": ["User"],
        "security":[{"bearerAuth":[]}],
        "parameters": [
          {
            "name":"id",
            "in": "path",
            "description": "UUID of User",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": "object",
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "204": {
            "description": "Not Content",
            "content": {

            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema":{
                  "$ref": "#/components/schemas/message"
                },
                "examples": {
                  "responseMessage": {
                    "value": {
                      "msg": "Id must be a UUID!."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put":{
        "summary": "Change a user's data",
        "description": "Based on the informed id and sent data, a user's data is changed.",
        "tags":["User"],
        "security":[{"bearerAuth":[]}],
        "parameters": [
          {
          "name": "id",
          "in":"path",
          "description": "UUID of User",
          "required": true
          }
        ],
        "requestBody":{
          "content":{
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user":{
                  "value": {
                    "name": "Luiz Mendes",
                    "username": "luizmendes90",
                    "birthdate": "1990-12-08",
                    "address": "Avenida Tropical",
                    "addressNumber": "1234",
                    "primaryPhone": "(99) 9999-9999",
                    "description": "Hello"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "204": {
            "description": "Not Content"
          }
        }
      },"delete": {
        "summary": "Delete a user",
        "description": "Based on the informed id, remove a user.",
        "tags":["User"],
        "security":[{"bearerAuth":[]}],
        "parameters": [
          {
            "name": "id",
            "in":"path",
            "description": "UUID of User",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "204": {
            "description": "Not Content"
          }
        }
      }
    }
  },
  "components":{
    "schemas":{
      "User": {
        "type": "object",
        "properties": {
          "id":{
            "type":"string"
          },
          "name":{
            "type":"string"
          },
          "username":{
            "type":"string"
          },
          "birthdate":{
            "type":"Date"
          },
          "address":{
            "type":"string"
          },
          "addressNumber":{
            "type":"string"
          },
          "primaryPhone":{
            "type":"string"
          },
          "description":{
            "type":"string"
          },
          "createdAt":{
            "type":"Date"
          }
        }
      },
      "RegisterUser": {
        "type": "object",
        "properties": {
          "username":{
            "type":"string"
          },
          "password":{
            "type":"string"
          }
        }
      },
      "message": {
        "type":"object",
        "properties":{
          "msg":{
              "type":"string"
          }
        }
      },
      "token": {
        "type":"object",
        "properties":{
          "token":{
              "type":"string"
          }
        }
      }
    },
    "securitySchemes":{
        "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
        }
    }
  }
}